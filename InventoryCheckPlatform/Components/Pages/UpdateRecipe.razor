@page "/edit-recipe/{RecipeId:int}"
@attribute [StreamRendering]
@attribute [Authorize(Roles = "администратор")]
@inject NavigationManager NavigationManager
@rendermode RenderMode.InteractiveServer

<h3>Изменить рецепт</h3>
<EditForm Model="recipe" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Название:</label>
        <InputText id="name" class="form-control" @bind-Value="recipe.Name" />
        <ValidationMessage For="@(() => recipe.Name)" />
    </div>
    @foreach (var emp in recipe.RecipeBaseProductAmount)
    {
        <div>


            <div class="dropdown">
                <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                    @emp.Name
                </button>
                <ul class="dropdown-menu">
                    @foreach (var pr in products)
                    {
                        <li><a class="dropdown-item" href="#">@pr.Name</a></li>

                    }
                </ul>
            </div>
            <InputText @bind-Value=emp.Amount />

        </div>
        
    }

    <button type="submit" class="btn btn-primary">Сохранить изменения</button>

</EditForm>
<Modal @ref="modal" />

    <button type="button" class="btn btn-secondary" @onclick="Cancel">Отменить</button>
<button type="submit" class="btn btn-primary" @onclick="ShowProduct">Добавить продукт</button>

@code {

    [Parameter]
    public int RecipeId { get; set; }

    private RecipeOutputModel recipe = new RecipeOutputModel();
    private List<BaseProductForRecipeOutputModel> products { get; set; }

    private Modal modal = new ();

    private AdminRecipeManager recipeManager = new AdminRecipeManager();

    protected override async Task OnInitializedAsync()
    {
        recipe = await recipeManager.GetRecipeByIdAsync(RecipeId);
        // products = await recipeManager.GetAllRecipesAsync();
    }


    private void HandleValidSubmit() //(обработка )
    {

        NavigationManager.NavigateTo("/recipes-list-page");
    }

    private void Cancel()
    {

        NavigationManager.NavigateTo("/recipes-list-page");
    }


    private async Task ShowProduct()
    {
        var parameters = new Dictionary<string, object>();
        parameters.Add("EmployeeId", 321);
        await modal.ShowAsync<AddIngridirntsInRecipe>(title: "");
    }
}
  


