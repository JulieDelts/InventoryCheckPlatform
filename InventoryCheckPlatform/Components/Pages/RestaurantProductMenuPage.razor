@page "/rest-product-menu-page/{restaurantId:int}"
@attribute [StreamRendering]
@attribute [Authorize(Roles = "администратор ресторана, логист")]
@using static InventoryCheckPlatform.Components.MinorElements.CardPagination
@rendermode RenderMode.InteractiveServer

<AuthorizeView Roles="администратор ресторана">
    <Authorized>
		<div class="col-md-12 text-center">
			<a href=@($"/select-products/{restaurantId}")>Добавить продукты для ресторана</a>
		</div>
	</Authorized>
</AuthorizeView>

<AuthorizeView Roles="логист">
    <Authorized>
		<div class="col-md-12 text-center">
			<a href=@("")>Заказать продукты для ресторана</a>
		</div>
	</Authorized>
</AuthorizeView>

@if (_products.Count > 0)
{
	<div class="card-holder">
		@for (int i = _paginationStart; i <= _paginationEnd; i++)
		{
            <RestaurantSpecificProductCard SpecificProductAmount="@_products[i]" RestaurantId="restaurantId"/>
		}
	</div>
}
else
{
	<p>Продуктов нет.</p>
}

<CardPagination ListCount="_products.Count"
                PaginationStart="_paginationStart"
                PaginationEnd="_paginationEnd"
                NumberOfItemsPerPage="_numberOfItemsPerPage"
                OnClickCallback="@SetPagination"></CardPagination>

@code
{
    [Parameter]
    public int restaurantId { get; set; }

    private List<RestaurantSpecificProductAmountOutputModel> _products;

    private RestaurantAdminProductManager _manager;

    private int _numberOfItemsPerPage;

    private int _paginationStart;

    private int _paginationEnd;

    public RestaurantProductMenuPage()
    {
        _manager = new();
        _products = new();
        _numberOfItemsPerPage = 6;

        if (_products.Count < _numberOfItemsPerPage)
        {
            _paginationStart = 0;
            _paginationEnd = _products.Count - 1;
        }
        else
        {

            _paginationStart = 0;
            _paginationEnd = _numberOfItemsPerPage;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        _products = await _manager.GetAllSpecificProductsWithAmount(restaurantId);

        if (_products.Count < _numberOfItemsPerPage)
        {
            _paginationStart = 0;
            _paginationEnd = _products.Count - 1;
        }
        else
        {

            _paginationStart = 0;
            _paginationEnd = _numberOfItemsPerPage;
        }

        await base.OnInitializedAsync();
    }

    private void SetPagination(PaginationEventArgs e)
    {
        _paginationStart = e.PaginationStart;
        _paginationEnd = e.PaginationEnd;
    }
}