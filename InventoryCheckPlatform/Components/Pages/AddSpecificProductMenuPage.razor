@page "/add-specific-product"
@attribute [StreamRendering]
@attribute [Authorize(Roles = "администратор")]
@rendermode RenderMode.InteractiveServer

<SpecificProductForm />
	
<h5>Доступные базовые продукты</h5>
<Grid TItem="SpecificProductOutputModel"
      Class="table table-hover table-bordered table-striped"
      DataProvider="ProductsDataProvider"
      AllowSorting="true"
      Responsive="true">
    <GridColumns>
        <GridColumn TItem="SpecificProductOutputModel" HeaderText="Id" PropertyName="Id" SortKeySelector="item => item.Id">
            @context.Id
        </GridColumn>
        <GridColumn TItem="SpecificProductOutputModel" HeaderText="Название" PropertyName="Name" SortKeySelector="item => item.Name">
            @context.Name
        </GridColumn>
        <GridColumn TItem="SpecificProductOutputModel" HeaderText="Категория" PropertyName="Category" SortKeySelector="item => item.Category">
            @context.Category
        </GridColumn>
        <GridColumn TItem="SpecificProductOutputModel" HeaderText="Поставщик" PropertyName="Vendor" SortKeySelector="item => item.Vendor">
            @context.Vendor
        </GridColumn>
        <GridColumn TItem="SpecificProductOutputModel" HeaderText="Цена за штуку" PropertyName="Price" SortKeySelector="item => item.Price">
            @context.Price
        </GridColumn>
    </GridColumns>
</Grid>



@code {
    private List<SpecificProductOutputModel> _specificProducts = default!;

    private LogisticianProductManager _logisticianProductManager;

    private SysAdminBaseProductManager _sysAdminProductManager;

    public AddSpecificProductMenuPage()
    {
        _logisticianProductManager = new();

        _sysAdminProductManager = new();
    }

    private async Task<GridDataProviderResult<SpecificProductOutputModel>> ProductsDataProvider(GridDataProviderRequest<SpecificProductOutputModel> request)
    {
        if (_specificProducts is null)
            _specificProducts = GetSpecificProducts();

        return await Task.FromResult(request.ApplyTo(_specificProducts));
    }

    private List<SpecificProductOutputModel> GetSpecificProducts()
    {
        return _logisticianProductManager.GetAllSpecificProducts();
    }

}