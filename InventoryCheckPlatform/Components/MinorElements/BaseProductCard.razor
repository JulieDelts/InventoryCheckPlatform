@rendermode RenderMode.InteractiveServer
<div class="card">
	<img src="667f354d-06ee-42ed-b70b-8a749a3e2969.jpg" class="card-img-top" alt="Пицца">
	<div class="card-body">
		<h5 class="card-title">@Product.Name</h5>
		<p class=" card-text">Id: @Product.Id</p>
		<p class="card-text">Категория: @Product.Category </p>

		<div class="dropdown">
			<button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
				Опции
			</button>
			<ul class="dropdown-menu">
				<li><button class="dropdown-item" type="button" @onclick="ShowForm">Редактировать</button></li>
				<li><button class="dropdown-item" type="button">Удалить</button></li>
			</ul>
		</div>

	    <Modal @ref="modal" UseStaticBackdrop="false" CloseOnEscape="true"/>

	</div>
</div>


@code {
	[Parameter]
	[EditorRequired]
	public BasePoductOutputModel Product { get; set; }

	private Modal modal = new();

	private async Task ShowForm()
	{
		ExtendedBaseProductInputModel productInputModel = new() { Id = Product.Id, Category = Product.Category, Name = Product.Name };
		var parameters = new Dictionary<string, object>();
		parameters.Add("ExtendedBaseProduct", productInputModel);
		await modal.ShowAsync<BaseProductModificationForm>(title: "Редактирование продукта", parameters: parameters);
	}
}