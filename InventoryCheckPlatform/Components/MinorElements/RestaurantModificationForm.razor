@rendermode RenderMode.InteractiveServer
@inject IConfiguration config

<EditForm Model="@ExtendedRestaurant" OnValidSubmit="@Submit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3 text-center">
        <label class="form-label">Адрес:<span class="text-danger">*</span></label>
        <InputText @bind-Value="ExtendedRestaurant.Address" Placeholder="@ExtendedRestaurant.Address" class="form-control" />
    </div>
    <div class="mb-3 text-center">
        <label class="form-label">Изображение:</label>
        <InputFile OnChange="@LoadFile" accept=".png,.jpg,.jpeg" class="form-control"></InputFile>
    </div>
    <div class="row">
        <div class="col-md-14 text-center">
            <input class="btn btn-success" type="submit" value="Подтвердить">
            <input class="btn btn-light" type="reset" value="Сбросить">
        </div>
    </div>
</EditForm>

@code
{
    [Parameter]
    [EditorRequired]
    public ExtendedRestaurantInputModel ExtendedRestaurant { get; set; }

    private SysAdminRestaurantManager _restaurantManager;

    private IBrowserFile? file;

    public RestaurantModificationForm()
    {
        _restaurantManager = new();
    }

    private async Task Submit()
    {
        var relativePath = await CaptureFile();
        ExtendedRestaurant.FileName = relativePath;

        await _restaurantManager.UpdateRestaurant(ExtendedRestaurant);
    }

    private void LoadFile(InputFileChangeEventArgs e)
    {
        file = e.File;
    }

    private async Task<string> CaptureFile()
    {
        if (file is null)
        {
            return "";
        }

        string newFileName = Path.ChangeExtension(
        Path.GetRandomFileName(),
        Path.GetExtension(file.Name));

        string path = Path.Combine(config.GetValue<string>("FileStorage"), "RestaurantImages", newFileName);

        string relativePath = Path.Combine("BaseProductImages", newFileName);

        await using FileStream fs = new(path, FileMode.Create);
        await file.OpenReadStream(maxAllowedSize: 1024 * 1024 * 30).CopyToAsync(fs);

        return relativePath;
    }
}