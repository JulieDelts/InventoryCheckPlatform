@rendermode RenderMode.InteractiveServer
@inject NavigationManager NavigationManager

<div class="card">
	@if (SpecificProduct.FileName != null && SpecificProduct.FileName != "")
	{
		<img src="@CreateFullPath(SpecificProduct.FileName)" alt="Фото продукта" width="170" height="100">
	}
	else
	{
		<img src="Images\\SpecificProductImages\\specific-product-default.png" alt="Фото продукта" width="170" height="100">
	}
	<div class="card-body">
		<h5 class="card-title">@SpecificProduct.Name</h5>
		<p class=" card-text">Id: @SpecificProduct.Id</p>
		<p class="card-text">Поставщик: @SpecificProduct.Vendor </p>
		<p class="card-text">Цена: @SpecificProduct.Price </p>
		<div class="dropdown">
			<button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
				Опции
			</button>
			<ul class="dropdown-menu">
				<li><button class="dropdown-item" type="button" @onclick="ShowForm">Редактировать</button></li>
				<li><button class="dropdown-item" type="button" @onclick="Delete">Удалить</button></li>
			</ul>
		</div>

		<Modal @ref="_modal" UseStaticBackdrop="false" CloseOnEscape="true" />

	</div>
</div>

@code {
	[Parameter]
	[EditorRequired]
	public SpecificProductOutputModel SpecificProduct { get; set; }

	private LogisticianProductManager _manager;

	private Modal _modal;

	public LogisticianSpecificProductCard()
	{
		_modal = new();

		_manager = new();
	}

	private async Task ShowForm()
	{
		ExtendedSpecificProductInputModel productInputModel = new()
			{
				Id = SpecificProduct.Id,
				Name = SpecificProduct.Name,
				Vendor = SpecificProduct.Vendor,
				Price = SpecificProduct.Price
			};
		var parameters = new Dictionary<string, object>();
		parameters.Add("ExtendedSpecificProduct", productInputModel);
		await _modal.ShowAsync<SpecificProductModificationForm>(title: "Редактирование продукта", parameters: parameters);
	}

	private async Task Delete()
	{
		await _manager.DeleteSpecificProduct(SpecificProduct.Id);

		NavigationManager.NavigateTo($"/logistician-product-menu-page", true);
	}

	private string CreateFullPath(string relativePath)
	{
		string path = Path.Combine("Images", relativePath);
		return path;
	}
}