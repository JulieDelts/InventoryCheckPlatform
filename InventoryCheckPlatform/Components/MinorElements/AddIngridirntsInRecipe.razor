
<div class="row">
</div>
<div class="row">
    <Dropdown
              Color="DropdownColor.Secondary">
        <DropdownToggleButton tabindex=@tabindex>@(selectedProduct?.Name ?? "Выберите продукт")</DropdownToggleButton>
        <DropdownMenu>
            @foreach (var pr in products)
            {
                <DropdownItem Type="DropdownItemType.Link" @onclick="() => SelectProduct(pr)">
                    @pr.Name
                </DropdownItem>
            }
        </DropdownMenu>
    </Dropdown>


    <button type="submit" class="btn btn-primary">Добавить</button>
</div>



@code {
  
    private int tabindex = 2;
    public int EmployeeId { get; set; }
    private List<BaseProductForRecipeOutputModel> products { get; set; }
    private AdminRecipeManager recipeManager = new AdminRecipeManager();

    List<string> messages = new List<string>();
    private BaseProductForRecipeOutputModel selectedProduct; // Переменная для хранения выбранного продукта

    protected override async Task OnInitializedAsync()
    {
        

        products = await recipeManager.GetAllProductsAsync();

        base.OnInitialized();
    }
    private int OnDropdownHidingAsync(int i)
    {

        messages.Add(new("OnHiding"));
        return i;
    }
    private void SelectProduct(BaseProductForRecipeOutputModel product)
    {
        selectedProduct = product;
    }// Сохранить выбранный продукт // Здесь вы можете выполнить дополнительные действия с выбранным продуктом }

}

